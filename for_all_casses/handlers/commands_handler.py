from aiogram import types
from for_all_casses import db
from for_all_casses.utilities import markup, help_user, CheckIMEI, check_imt
from loader import dp, bot

check_imei = CheckIMEI()


@dp.message_handler(commands=['start', 'help', 'imt', 'toadmin', 'imei'])
async def take_command_user(message: types.Message):
    db.last_uses(message.from_user.id)
    if message.text == '/start':
        about_bot = await bot.get_me()
        db.check_user(message.chat.id, message.from_user.first_name, message.from_user.username)
        await message.answer(
            f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}!\n–Ø - <b>{about_bot['first_name']}</b> –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π "
            f"–Ω–∞ –≤—Å—ñ –≤–∏–ø–∞–¥–∫–∏ –∂–∏—Ç—Ç—è.\n\n{help_user()}", reply_markup=markup)
    elif message.text == '/help':
        await message.answer(f"–î–æ–ø–æ–º–æ–≥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É üëá\n\n{help_user()}")
    elif message.text.startswith('/imt'):
        clear_imt = message.text[5:]
        if not clear_imt:
            await message.answer('–í–∏ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–≤–µ–ª–∏, –≤–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ '
                                 '–í–∞–≥–∞(–ö–ì,–ì) –ó—Ä—ñ—Å—Ç(–ú,–°–ú) –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ /imt 80,0 1,75')
        else:
            msg = check_imt(clear_imt)
            await message.answer(msg)
    elif message.text.startswith('/toadmin') and len(message.text.split()) > 1:
        await bot.send_message(379210271,
                               f"<b>–í—ñ–¥:</b> {message.from_user.first_name} {message.from_user.id}\n"
                               f"<b>–¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b>\n{message.text.replace('/toadmin ', '').capitalize()}",
                               reply_markup=markup)
    elif message.text.startswith('/imei'):
        clear_imei = message.text[6:]
        if len(clear_imei) < 8:
            await message.answer('–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–∏–π IMEI', reply_markup=markup)
        else:
            msg = check_imei.web_check_imei(clear_imei)
            await message.answer(msg, reply_markup=markup)
